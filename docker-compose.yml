version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    container_name: keycloak

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: transactions_db
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    container_name: postgres
    labels:
      - "io.jaeger.enabled=true"
      - "io.jaeger.service.name=postgres"

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    container_name: mysql
    labels:
      - "io.jaeger.enabled=true"
      - "io.jaeger.service.name=mysql"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    container_name: redis
    labels:
      - "io.jaeger.enabled=true"
      - "io.jaeger.service.name=redis"

  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: auditDB
    ports:
      - "27017:27017"
    labels:
      - "io.jaeger.enabled=true"
      - "io.jaeger.service.name=mongodb"


  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092  # Para acesso externo ao Kafka
      KAFKA_LISTENER_NAME_PLANE: PLAINTEXT
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENER_INTERFACE: 0.0.0.0
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - .kafka_data:/var/lib/kafka/data

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
  hotrod:
    image: jaegertracing/example-hotrod:latest
    ports:
      - "8083:8080"
    command: ["all"]
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      - jaeger

  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: "off"  # Sem banco de dados (em memória)
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_GUI_HOST: localhost:8002
    ports:
      - "8000:8000"  # Porta de proxy
      - "8001:8001"  # Porta de administração
      - "8002:8002"  # Painel de administração
    depends_on:
      - keycloak
    networks:
      - kong-net
    restart: always

  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    networks:
      - kong-net
    restart: always

networks:
  kong-net:
    driver: bridge